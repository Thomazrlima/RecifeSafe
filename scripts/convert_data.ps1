# Script de Execu√ß√£o R√°pida - Convers√£o de Dados Reais
# ======================================================
# Este script PowerShell facilita a execu√ß√£o da convers√£o de dados reais
# para o formato padronizado do RecifeSafe.

Write-Host "========================================================================" -ForegroundColor Cyan
Write-Host "üåä RecifeSafe - Convers√£o de Dados Reais" -ForegroundColor Cyan
Write-Host "========================================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se est√° no diret√≥rio correto
if (-not (Test-Path "src/data/convert_real_to_synthetic_format.py")) {
    Write-Host "‚ùå Erro: Execute este script a partir da raiz do projeto RecifeSafe" -ForegroundColor Red
    Write-Host "   Diret√≥rio atual: $(Get-Location)" -ForegroundColor Yellow
    Write-Host "   Diret√≥rio esperado: D:\PENTES\PENTES\RecifeSafe\" -ForegroundColor Yellow
    exit 1
}

# Definir caminhos
$marePath = "data\processed\2024.csv"
$chuvaPath = "data\processed\Dados pluviom√©tricos da APAC - Regi√£o metropolitana de Recife - 2024.csv"
$outputPath = "data\processed\real_data_converted.csv"

# Verificar se arquivos de entrada existem
Write-Host "üîç Verificando arquivos de entrada..." -ForegroundColor Yellow
Write-Host ""

$filesOk = $true

if (Test-Path $marePath) {
    Write-Host "   ‚úÖ Arquivo de mar√©s encontrado: $marePath" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Arquivo de mar√©s N√ÉO encontrado: $marePath" -ForegroundColor Red
    $filesOk = $false
}

if (Test-Path $chuvaPath) {
    Write-Host "   ‚úÖ Arquivo de chuva encontrado: $chuvaPath" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Arquivo de chuva N√ÉO encontrado: $chuvaPath" -ForegroundColor Red
    $filesOk = $false
}

Write-Host ""

if (-not $filesOk) {
    Write-Host "‚ùå Arquivos de entrada ausentes. Verifique os caminhos." -ForegroundColor Red
    Write-Host ""
    Write-Host "üìÅ Estrutura esperada:" -ForegroundColor Yellow
    Write-Host "   data/" -ForegroundColor Gray
    Write-Host "   ‚îî‚îÄ‚îÄ processed/" -ForegroundColor Gray
    Write-Host "       ‚îú‚îÄ‚îÄ 2024.csv" -ForegroundColor Gray
    Write-Host "       ‚îî‚îÄ‚îÄ Dados pluviom√©tricos da APAC - Regi√£o metropolitana de Recife - 2024.csv" -ForegroundColor Gray
    Write-Host ""
    exit 1
}

# Perguntar ao usu√°rio se quer usar seed personalizado
Write-Host "üé≤ Seed para reprodutibilidade (padr√£o: 42)" -ForegroundColor Yellow
$seedInput = Read-Host "   Digite um n√∫mero ou pressione Enter para usar o padr√£o"
$seed = if ($seedInput -eq "") { 42 } else { [int]$seedInput }
Write-Host ""

# Executar convers√£o
Write-Host "üöÄ Iniciando convers√£o..." -ForegroundColor Cyan
Write-Host "   Entrada - Mar√©s: $marePath" -ForegroundColor Gray
Write-Host "   Entrada - Chuva: $chuvaPath" -ForegroundColor Gray
Write-Host "   Sa√≠da: $outputPath" -ForegroundColor Gray
Write-Host "   Seed: $seed" -ForegroundColor Gray
Write-Host ""

# Executar o script Python
& python src\data\convert_real_to_synthetic_format.py `
    --mare $marePath `
    --chuva $chuvaPath `
    --output $outputPath `
    --seed $seed

# Verificar se convers√£o foi bem-sucedida
if ($LASTEXITCODE -eq 0) {
    Write-Host ""
    Write-Host "========================================================================" -ForegroundColor Green
    Write-Host "‚úÖ Convers√£o conclu√≠da com sucesso!" -ForegroundColor Green
    Write-Host "========================================================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìä Pr√≥ximos passos:" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "1Ô∏è‚É£ Visualizar dados convertidos:" -ForegroundColor Yellow
    Write-Host "   python -c `"import pandas as pd; df=pd.read_csv('$outputPath'); print(df.head(20)); print('\n', df.describe())`"" -ForegroundColor Gray
    Write-Host ""
    Write-Host "2Ô∏è‚É£ Substituir dados sint√©ticos (BACKUP RECOMENDADO):" -ForegroundColor Yellow
    Write-Host "   Copy-Item data\processed\simulated_daily.csv data\processed\simulated_daily_backup.csv" -ForegroundColor Gray
    Write-Host "   Copy-Item $outputPath data\processed\simulated_daily.csv" -ForegroundColor Gray
    Write-Host ""
    Write-Host "3Ô∏è‚É£ Treinar modelos com dados reais:" -ForegroundColor Yellow
    Write-Host "   python src\models\train_models.py" -ForegroundColor Gray
    Write-Host ""
    Write-Host "4Ô∏è‚É£ Executar dashboard com dados reais:" -ForegroundColor Yellow
    Write-Host "   streamlit run src\dashboard\app.py" -ForegroundColor Gray
    Write-Host ""
    
    # Perguntar se quer substituir dados sint√©ticos
    Write-Host "========================================================================" -ForegroundColor Cyan
    $replace = Read-Host "Deseja substituir os dados sint√©ticos pelos dados reais agora? (s/N)"
    
    if ($replace -eq "s" -or $replace -eq "S") {
        Write-Host ""
        Write-Host "üì¶ Fazendo backup dos dados sint√©ticos..." -ForegroundColor Yellow
        
        if (Test-Path "data\processed\simulated_daily.csv") {
            Copy-Item "data\processed\simulated_daily.csv" "data\processed\simulated_daily_backup_$(Get-Date -Format 'yyyyMMdd_HHmmss').csv"
            Write-Host "   ‚úÖ Backup criado" -ForegroundColor Green
        }
        
        Write-Host ""
        Write-Host "üîÑ Substituindo dados..." -ForegroundColor Yellow
        Copy-Item $outputPath "data\processed\simulated_daily.csv"
        Write-Host "   ‚úÖ Dados substitu√≠dos" -ForegroundColor Green
        Write-Host ""
        
        Write-Host "ü§ñ Deseja treinar os modelos agora? (s/N)" -ForegroundColor Cyan
        $train = Read-Host
        
        if ($train -eq "s" -or $train -eq "S") {
            Write-Host ""
            Write-Host "üöÄ Treinando modelos..." -ForegroundColor Cyan
            & python src\models\train_models.py
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host ""
                Write-Host "‚úÖ Modelos treinados com sucesso!" -ForegroundColor Green
                Write-Host ""
                Write-Host "üåê Deseja iniciar o dashboard agora? (s/N)" -ForegroundColor Cyan
                $dashboard = Read-Host
                
                if ($dashboard -eq "s" -or $dashboard -eq "S") {
                    Write-Host ""
                    Write-Host "üåê Iniciando dashboard..." -ForegroundColor Cyan
                    Write-Host "   Acesse: http://localhost:8501" -ForegroundColor Yellow
                    Write-Host ""
                    streamlit run src\dashboard\app.py
                }
            }
        }
    }
    
} else {
    Write-Host ""
    Write-Host "========================================================================" -ForegroundColor Red
    Write-Host "‚ùå Erro durante a convers√£o" -ForegroundColor Red
    Write-Host "========================================================================" -ForegroundColor Red
    Write-Host ""
    Write-Host "üìù Verifique os erros acima e consulte a documenta√ß√£o:" -ForegroundColor Yellow
    Write-Host "   docs\CONVERSAO_DADOS_REAIS.md" -ForegroundColor Gray
    Write-Host ""
    exit 1
}
